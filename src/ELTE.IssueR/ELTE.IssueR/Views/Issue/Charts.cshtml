@using ELTE.IssueR.Models

@model ChartsViewModel

@{
    ViewBag.Title = "Charts";
}

@section AddToHead {
    <script src="~/Scripts/Chart.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-2.1.3.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jsgantt.js" type="text/javascript"></script>
    <link href="~/Content/jsgantt.css" rel="stylesheet" type="text/css" />
}

<h2>Charts</h2>

<table>
    <tr>
        <td>
            <canvas id="typePieChart" width="200" height="200"></canvas>
        </td>
        <td>
            <canvas id="statusPieChart" width="200" height="200"></canvas>
        </td>
    </tr>
</table>

<script>
    $(function () {
        var typePieContext = $("#typePieChart").get(0).getContext("2d");
        var myPieChart1 = new Chart(typePieContext).Pie(@Html.Raw(Json.Encode(Model.TypePieChart)), Chart.defaults.Pie);

        var statusPieContext = $("#statusPieChart").get(0).getContext("2d");
        var myPieChart2 = new Chart(statusPieContext).Pie(@Html.Raw(Json.Encode(Model.StatusPieChart)), Chart.defaults.Pie);
    });
</script>

<!-- Gantt -->
<div style="position:relative" class="gantt" id="GanttChartDIV"></div>

<script language="javascript">
    // find chart container
    var g = new JSGantt.GanttChart('g',document.getElementById('GanttChartDIV'), 'day');

    // GanttChart(pGanttVar, pDiv, pFormat)
    // pGanttVar: (required) name of the variable assigned
    // pDiv: (required) this is a DIV object created in HTML
    // pFormat: (required) - used to indicate whether chart should be drawn in "day", "week", "month", or "quarter" format

    // Customize the look and feel using the following setters

    g.setShowRes(1); // Show/Hide Responsible (0/1)
    g.setShowDur(1); // Show/Hide Duration (0/1)
    g.setShowComp(1); // Show/Hide % Complete(0/1)
    g.setCaptionType('Resource');  // Set to Show Caption (None,Caption,Resource,Duration,Complete)
    g.setShowStartDate(1); // Show/Hide Start Date(0/1)
    g.setShowEndDate(1); // Show/Hide End Date(0/1)
    g.setDateInputFormat('mm/dd/yyyy')  // Set format of input dates ('mm/dd/yyyy', 'dd/mm/yyyy', 'yyyy-mm-dd')
    g.setDateDisplayFormat('mm/dd/yyyy') // Set format to display dates ('mm/dd/yyyy', 'dd/mm/yyyy', 'yyyy-mm-dd')
    g.setFormatArr("day","week","month","quarter") // Set format options (up to 4 : "minute","hour","day","week","month","quarter")
    

    
    g.Draw();
    g.DrawDependencies();
</script>