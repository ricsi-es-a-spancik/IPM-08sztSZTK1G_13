@model ELTE.IssueR.Models.Account.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Bejelentkezés közösségi profillal</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                Jelenleg nem áll rendelkezésre külső szolgáltató által biztosított profil hozzáadására.<br />
                Kérjük térjen vissza legközelebb, vagy hozzon létre új profilt nálunk!
                <br />
                <br />
                @Html.ActionLink("Regisztráció", "Register", "Account")
            </p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        switch (p.AuthenticationType)
                        {
                            case "Facebook":
                                <button type="submit" class="loginbutton facebook" id="@p.AuthenticationType" value="@p.AuthenticationType" name="provider" title="Log in using your @p.Caption account"></button> break;
                            case "Google":
                                <button type="submit" class="loginbutton google" id="@p.AuthenticationType" value="@p.AuthenticationType" name="provider" title="Log in using your @p.Caption account"></button> break;
                            default: <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>; break;
                        }
                        <br />
                    }
                </p>
            </div>
        }
    }
}
